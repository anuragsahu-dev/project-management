services:
  redis:
    image: redis:7.2
    deploy:
      replicas: 1
      update_config:
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 1
        order: start-first
    ports:
      - '6379:6379'
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 5s
    volumes:
      - redis-data:/data
    networks:
      - task-app-net
  migrate:
    image: as3305100/task-manager:build-b99df04090197ea0b3b3e373410472f1b3830bc6
    command:
      - npx
      - prisma
      - migrate
      - deploy
    environment:
      - DATABASE_URL=//neondb_owner:$(cat /run/secrets/db_password)@ep-lively-dawn-ad8vgrgi-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require
    networks:
      - task-app-net
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    secrets:
      - db_password
  task-manager-server:
    image: as3305100/task-manager:build-b99df04090197ea0b3b3e373410472f1b3830bc6
    deploy:
      replicas: 2
      update_config:
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 1
        order: start-first
    healthcheck:
      test:
        - CMD
        - wget
        - '--no-verbose'
        - '--tries=1'
        - '--spider'
        - http://127.0.0.1:3001/docker-health
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 1m
    ports:
      - '3000:3000'
    environment:
      - PORT=3000
      - INTERNAL_PORT=3001
      - REDIS_HOST=redis
      - NODE_ENV=production
      - CLIENT_URL=http://localhost:5173
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - ACCESS_TOKEN_EXPIRY=30m
      - REFRESH_TOKEN_EXPIRY=1d
      - FORGOT_PASSWORD_REDIRECT_URL=http://localhost:3000/api/v1/users/reset-password
      - SMTP_USER_FILE=/run/secrets/smtp_user
      - SMTP_PASS_FILE=/run/secrets/smtp_pass
      - ACCESS_TOKEN_SECRET_FILE=/run/secrets/access_token_secret
      - REFRESH_TOKEN_SECRET_FILE=/run/secrets/refresh_token_secret
      - DATABASE_URL_FILE=/run/secrets/database_url
    networks:
      - task-app-net
    secrets:
      - smtp_pass
      - smtp_user
      - access_token_secret
      - refresh_token_secret
      - database_url
networks:
  task-app-net: {}
volumes:
  redis-data:
    driver: local
secrets:
  database_url:
    external: true
  smtp_user:
    external: true
  smtp_pass:
    external: true
  access_token_secret:
    external: true
  refresh_token_secret:
    external: true
  db_password:
    external: true
