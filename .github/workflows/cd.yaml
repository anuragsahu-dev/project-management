name: project-management

on:
  push:
    branches: ["main"]

jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Run Prisma migrations
        env:
          DATABASE_URL: ${{secrets.DATABASE_URL}}
        run: npx prisma migrate deploy

  build-and-push:
    runs-on: ubuntu-latest
    needs: migrate
    permissions:
      contents: write
    env:
      IMAGE_NAME: as3305100/task-manager
      IMAGE_TAG: build-${{github.sha}}
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Update compose yaml file (task-manager-server)
        uses: fjogeleit/yaml-update-action@v0.16.1
        with:
          valueFile: compose.yaml
          propertyPath: 'services["task-manager-server"].image'
          value: ${{env.IMAGE_NAME }}:${{ env.IMAGE_TAG}}
          commitChange: false
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{secrets.APP_ID}}
          private_key: ${{secrets.APP_SECRET_KEY}}
      - name: Commit files
        run: |
          git config --local user.name "Anurag Sahu"
          git config --local user.email as3305100@gmail.com
          git add .
          git commit -m "bump the image version ${{env.IMAGE_TAG}} [skip ci]"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{steps.generate_token.outputs.token}}
      - name: Build docker image
        run: docker build -t ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}} --platform linux/amd64 .
      - name: Login into docker hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
      - name: Push docker image to Docker Hub
        run: docker push ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}

  # deploy:
    # name: Deploy the image to Docker Swarm Cluster
    # runs-on: ubuntu-latest
    # env:
    #   IMAGE_NAME: as3305100/task-manager
    #   IMAGE_TAG: build-${{github.sha}}
    # needs:
    #   - build-and-push
    # steps:
    #   - name: SSH into the server
    #     uses: appleboy/ssh-action@v1
    #     with:
    #       host: ${{secrets.SWARM_MANAGER_HOST}}
    #       username: ${{secrets.SWARM_HOST_USERNAME}}
    #       key: ${{secrets.SWARM_HOST_SSH_KEY}}
    #       port: ${{secrets.SWARM_HOST_SSH_PORT}}
    #       script: |
    #         set -e     

    #         if [ ! -d ~/taskManager ]; then
    #             git clone https://github.com/as3305100/project-management.git ~/taskManager
    #         fi

    #         if [ ! -d ~/taskManager/.git ]; then
    #             rm -rf ~/taskManager
    #             git clone https://github.com/as3305100/project-management.git ~/taskManager
    #         fi

    #         cd ~/taskManager

    #         # pull compose file using git

    #         git fetch origin main
    #         git checkout main
    #         git pull origin main

    #         sudo docker pull ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
    #         sudo docker stack deploy -c compose.yaml taskManager
