name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Run Migrations"]
    types:
      - completed

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      IMAGE_NAME: as3305100/task-manager
      IMAGE_TAG: build-${{github.sha}}
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Update compose yaml file
        uses: fjogeleit/yaml-update-action@v0.16.1
        with:
          valueFile: compose.yaml
          propertyPath: 'services["task-manager-server"].image'
          value: ${{env.IMAGE_NAME }}:${{ env.IMAGE_TAG}}
          commitChange: false
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{secrets.APP_ID}}
          private_key: ${{secrets.APP_SECRET_KEY}}
      - name: Commit files
        run: |
          git config --local user.name "Anurag Sahu"
          git config --local user.email as3305100@gmail.com
          git add .
          git commit -m "bump the image version ${{env.IMAGE_TAG}} [skip ci]" || echo "No changes to commit"
      - name: Push changes
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{steps.generate_token.outputs.token}}
      - name: Build docker image
        run: docker build -t ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}} --platform linux/amd64 .
      - name: Login into docker hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
      - name: Push docker image to Docker Hub
        run: docker push ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}

  # deploy:
  #   name: Deploy the image to Docker Swarm Cluster
  #   runs-on: ubuntu-latest
  #   env:
  #     IMAGE_NAME: as3305100/task-manager
  #     IMAGE_TAG: build-${{github.sha}}
  #   needs:
  #     - build-and-push
  #   steps:
  #     - name: SSH into the server
  #       uses: appleboy/ssh-action@v1
  #       with:
  #         host: ${{secrets.SWARM_MANAGER_HOST}}
  #         username: ${{secrets.SWARM_HOST_USERNAME}}
  #         key: ${{secrets.SWARM_HOST_SSH_KEY}}
  #         port: ${{secrets.SWARM_HOST_SSH_PORT}}
  #         script: |
  #           set -e

  #           if [ ! -d ~/taskManager/.git ]; then
  #             rm -rf ~/taskManager
  #             git clone https://github.com/anuragsahu-dev/project-management.git ~/taskManager
  #           fi

  #           cd ~/taskManager

  #           git fetch origin main
  #           git checkout main
  #           git pull origin main

  #           sudo docker pull ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
  #           sudo docker stack deploy -c compose.yaml taskManager

  create-tag-and-release:
    name: Create Git Tag + GitHub Release
    runs-on: ubuntu-latest
    needs:
      - build-and-push
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Generate version
        id: version
        run: |
          VERSION=v1.$(date +'%Y%m%d%H%M%S')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # âœ… Create GitHub Release (automatically creates the tag)
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
